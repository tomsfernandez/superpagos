version: '3.3'

services:
  api:
    image: api
    container_name: 'api'
    build:
      context: .
      dockerfile: Dockerfile.netcore
      args:
        PROJECT_NAME: Web
    ports:
      - "5750:5000"
    environment:
      DefaultConnection: Server=postgres;Database=superpagos;User Id=sa;Password=password;Port=5432;
    env_file:
      - .env
       
  web:
    image: web
    container_name: 'web'
    build:
      context: .
      dockerfile: Dockerfile.vue
    ports:
      - "80:80"
    env_file:
      - .env
      
  scheduler:
    image: scheduler
    container_name: "superpagos_scheduler"
    build:
      context: .
      args:
      - PROJECT_NAME=Scheduler
      - CONFIGURATION=Release
      dockerfile: Dockerfile.netcore
    ports:
    - "8080:5000"
    environment:
      HangfireConnection: Server=postgres_hangfire;Database=hangfire;User Id=sa;Password=password;Port=5432;
      SuperpagosHealthBase: http://api
    env_file: .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/hangfire"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on:
      - postgres_hangfire

  migrations:
    image: web_migrations
    container_name: "web_migrations"
    build:
      context: .
      dockerfile: Dockerfile.migrations
      args:
        PROJECT_NAME: Web
    environment:
      DefaultConnection: Server=postgres;Database=superpagos;User Id=sa;Password=password;Port=5432;

  postgres:
    image: postgres:11
    container_name: "postgres"
    restart: unless-stopped
    ports:
    - 5432:5432
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: sa
      POSTGRES_DB: superpagos
      POSTGRES_HOST: postgres
    volumes:
    - superpagos_data:/var/lib/postgresql/data
    
  postgres_hangfire:
    image: postgres:11
    container_name: "postgres_hangfire"
    restart: unless-stopped
    ports:
    - 5433:5432
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: sa
      POSTGRES_DB: hangfire
      POSTGRES_HOST: postgres_hangfire
    volumes:
    - hangfire_data:/var/lib/postgresql/data 

  e2e:
    image: e2e
    container_name: "e2e"
    build:
      context: .
      dockerfile: Dockerfile.cypress
    environment:
      CYPRESS_baseUrl: http://web
      CYPRESS_EXTERNAL_API: http://api:5000
    env_file: .env
    
networks:
  default:
    external:
      name: superpagos_network

volumes:
  superpagos_data:
    external: true
  hangfire_data:
    external: true
